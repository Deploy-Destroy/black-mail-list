version: 0.2

phases:
  install:
    runtime-version:
      python: 3.12
    commands:
      - pip install --upgrade pip
      - pip install -r requirements.txt
  pre_build:
    commands:
      - echo Running tests..
      - pytest --maxfail=1 --disable-warnings --tb=short 
      - echo Directioner.2203 | docker login -u jessicadpaezj --password-stdin
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 948529748515.dkr.ecr.us-east-1.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t black-mail-list .
      - docker tag black-mail-list:latest 948529748515.dkr.ecr.us-east-1.amazonaws.com/black-mail-list:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 948529748515.dkr.ecr.us-east-1.amazonaws.com/black-mail-list:latest
      - echo Writing Image Definitions file...
      - echo '[{"name":"Container-mail-app","imageUri":"948529748515.dkr.ecr.us-east-1.amazonaws.com/black-mail-list:latest"}]' > imagedefinitions.json
      - echo '{"ImageURI":"948529748515.dkr.ecr.us-east-1.amazonaws.com/black-mail-list:latest"}' > imageDetail.json
      - cat imagedefinitions.json 
      - echo Generating taskdef.json...
      - |
        cat > taskdef.json <<EOF
        {
          "executionRoleArn": "arn:aws:iam::948529748515:role/ecsTaskExecutionRole",
          "containerDefinitions": [
            {
              "name": "Container-mail-app",
              "image": "948529748515.dkr.ecr.us-east-1.amazonaws.com/black-mail-list:latest",
              "essential": true,
              "portMappings": [
                {
                  "containerPort": 5000,
                  "hostPort": 5000,
                  "protocol": "tcp"
                }
              ]
            }
          ],
          "requiresCompatibilities": ["FARGATE"],
          "networkMode": "awsvpc",
          "cpu": "512",
          "memory": "1024",
          "family": "Task-mail-app"
        }
        EOF

artifacts:
  files:
    - '**/*'
    - imagedefinitions.json
    - imageDetail.json
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.json
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json