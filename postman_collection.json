{
    "info": {
        "name": "Blacklist API Tests",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Variables",
            "item": [
                {
                    "name": "Set Variables",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.environment.set('base_url', 'http://localhost:5001');",
                                    "pm.environment.set('api_token', 'blacklist-secret-token-2024');"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "Agregar Email a Lista Negra",
            "item": [
                {
                    "name": "Caso Exitoso",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{api_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"test@example.com\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"blocked_reason\": \"Spam\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/blacklists",
                            "host": ["{{base_url}}"],
                            "path": ["blacklists"]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 201', function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "pm.test('Response is successful', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.success).to.be.true;",
                                    "});",
                                    "pm.test('Email is saved correctly', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.data.email).to.eql('test@example.com');",
                                    "});",
                                    "pm.test('IP address is present', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.data.request_ip).to.be.a('string');",
                                    "    pm.expect(jsonData.data.request_ip.length).to.be.at.least(7);",
                                    "});",
                                    "pm.test('Request time is present', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.data.request_time).to.be.a('string');",
                                    "    pm.expect(new Date(jsonData.data.request_time)).to.be.a('Date');",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Sin Token",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"test@example.com\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"blocked_reason\": \"Spam\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/blacklists",
                            "host": ["{{base_url}}"],
                            "path": ["blacklists"]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 401', function () {",
                                    "    pm.response.to.have.status(401);",
                                    "});",
                                    "pm.test('Response indicates missing token', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.include('Token de autorizaci√≥n no proporcionado');",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "Verificar Email en Lista Negra",
            "item": [
                {
                    "name": "Email en Lista Negra",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{api_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/blacklists/test@example.com",
                            "host": ["{{base_url}}"],
                            "path": ["blacklists", "test@example.com"]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "pm.test('Response is successful', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.success).to.be.true;",
                                    "});",
                                    "pm.test('Email is blacklisted', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.is_blacklisted).to.be.true;",
                                    "});",
                                    "pm.test('IP address is present in response', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.data.request_ip).to.be.a('string');",
                                    "    pm.expect(jsonData.data.request_ip.length).to.be.at.least(7);",
                                    "});",
                                    "pm.test('Request time is present in response', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.data.request_time).to.be.a('string');",
                                    "    pm.expect(new Date(jsonData.data.request_time)).to.be.a('Date');",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Email No en Lista Negra",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{api_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/blacklists/notblacklisted@example.com",
                            "host": ["{{base_url}}"],
                            "path": ["blacklists", "notblacklisted@example.com"]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "pm.test('Response is successful', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.success).to.be.true;",
                                    "});",
                                    "pm.test('Email is not blacklisted', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.is_blacklisted).to.be.false;",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
} 